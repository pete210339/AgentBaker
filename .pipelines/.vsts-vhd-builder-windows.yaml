name: $(Date:yyyyMMdd)$(Rev:.r)_$(Build.SourceBranchName)_$(BuildID)
trigger: none

pool:
  name: $(AZURE_POOL_NAME)

variables:
- group: ab-windows-ms-tenant

parameters:
- name: build2019containerd
  displayName: Build 2019 containerd
  type: boolean
  default: True
- name: build2022containerd
  displayName: Build 2022 containerd
  type: boolean
  default: True
- name: build2022containerdgen2
  displayName: Build 2022 containerd Gen 2
  type: boolean
  default: True
- name: vhddebug
  displayName: VHD Debug
  type: boolean
  default: False
- name: backfillresourcedeletion
  displayName: Perform Resource Backfill Deletion
  type: boolean
  default: False

# Use variable group "ab-windows-ame-tenant" and link it to the pipeline "AKS Windows VHD Build - PR check-in gate"
# Use variable group "ab-windows-ms-tenant" and link it to the pipeline "[TEST All VHDs] AKS Windows VHD Build - Msft Tenant"

stages:
  - stage: build_vhd_2022_containerd
    dependsOn: []
    condition: eq('${{ parameters.build2022containerd }}', True)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]True'
            echo '##vso[task.setvariable variable=BACKFILL_RESOURCE_DELETION]${{parameters.backfillresourcedeletion}}'
            echo '##vso[task.setvariable variable=VHD_DEBUG]${{parameters.vhddebug}}'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D4s_v3'
            echo '##vso[task.setvariable variable=WINDOWS_SKU]2022-containerd'
            echo '##vso[task.setvariable variable=WINDOWS_BASE_IMAGE_URL]$(WINDOWS_2022_BASE_IMAGE_URL)'
            echo '##vso[task.setvariable variable=WINDOWS_NANO_IMAGE_URL]$(WINDOWS_2022_NANO_IMAGE_URL)'
            echo '##vso[task.setvariable variable=WINDOWS_CORE_IMAGE_URL]$(WINDOWS_2022_CORE_IMAGE_URL)'
            echo '##vso[task.setvariable variable=WINDOWS_PRIVATE_PACKAGES_URL]$(PRIVATE_PACKAGES_URL)'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template-windows.yaml
          parameters:
            artifactName: 2022-containerd
    - stage: Create AKS Cluster
      dependsOn: build_vhd_2022_containerd
      jobs:
    -   job: Create AKS CLuster
        timeoutInMinutes: 60
        steps:
          - task: Login@1
            displayName: Login
            - powershell: |
                # login using service principal
                az login --service-principal --username $(AZURE_BUILD_CLIENT_ID) --password $(AZURE_BUILD_CLIENT_SECRET) --tenant $(AZURE_BUILD_TENANT_ID)
          - task: SetSubscription@1
            displayName: Set Subscription
            - powershell: |
                # set subscription account
                az account set -s $(AZURE_BUILD_SUBSCRIPTION_ID)
          - task: CreateResourceGroup@1
            displayName: Create Resource Group
            - powershell: |
                # create resource group
                az group create -n $(AZURE_BUILD_RESOURCE_GROUP_NAME)-$(SIG_IMAGE_VERSION) -l $(AZURE_BUILD_LOCATION)
          - task: CreateAKSCluster@1
            displayName: Create AKS Cluster
            - powershell: |
                # create cluster
                az aks create \
                --resource-group $(AZURE_BUILD_RESOURCE_GROUP_NAME)-$(SIG_IMAGE_VERSION) \
                --name $(SIG-IMAGE-NAME-PREFIX)-aks-$(SIG_IMAGE_VERSION) \
                --enable-addons monitoring \
                --network-plugin $(CLUSTER_NETWORK_TYPE) \
                --vm-set-type VirtualMachineScaleSets \
                --load-balancer-sku standard \
                --windows-admin-username azureuser \
                --windows-admin-password $(CLUSTER_PASSWORD) \
                --generate-ssh-keys 
          - task: AddWindowsNodePool@1
            displayName: Add Windows Node Pool
            - powershell: |
                # add windows node pool and set custom image to use from previous pipeline stage
                az aks nodepool add \
                --resource-group $rg \
                --cluster-name  petetan-aks-cluster \
                --node-vm-size Standard_D8s_v3 \
                --node-osdisk-size 256 \
                --os-type Windows \
                --name npwin \ 
                --node-count 1  \
                --aks-custom-headers AKSHTTPCustomFeatures=Microsoft.ContainerService/UseCustomizedWindowsOSImage,WindowsOSImageSubscriptionID=$(AZURE_BUILD_SUBSCRIPTION_ID),WindowsOSImageResourceGroup=$(AZURE_BUILD_RESOURCE_GROUP_NAME),WindowsOSImageGallery=$(AZURE_BUILD_GALLERY_NAME),WindowsOSImageName=windows-2022-containerd,WindowsOSImageVersion=$(SIG_IMAGE_VERSION)
 
  - stage: backfill_cleanup_outdated_resources
    dependsOn: []
    condition: always()
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]True'
            echo '##vso[task.setvariable variable=BACKFILL_RESOURCE_DELETION]${{parameters.backfillresourcedeletion}}'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template-windows-cleanup.yaml
